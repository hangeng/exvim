" This file will be loaded after .vimrc.plugins, 
" but before 'filetype plugin on', 'filetype indent on' and 'syntax on' been executed. 
" This file is designed to be safe to add your own plugins and plugins' configuration.

" Add your customized plugins:
" Example: Plugin 'foo/bar/foobar'

" ---------------------------------------------------
" junegunn/fzf
" ---------------------------------------------------
"Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
nnoremap <C-P> :Files<CR>
nnoremap <C-x> :Buffers<CR>
nnoremap <leader>ss :pwd<CR> :Tags<CR>
set rtp+=/usr/local/opt/fzf


" ---------------------------------------------------
" vasconcelloslf/vim-interestingwords
" ---------------------------------------------------
Plugin 'vasconcelloslf/vim-interestingwords'


" ---------------------------------------------------
" mileszs/ack.vim
" ---------------------------------------------------
Plugin 'mileszs/ack.vim'
if executable('ag')
      let g:ackprg = 'ag --vimgrep'
endif


" ---------------------------------------------------
" mileszs/ack.vim
" ---------------------------------------------------
" Plugin 'jrosiek/vim-mark'

"Plugin 'vim-scripts/gtags.vim'

" ---------------------------------------------------
" mileszs/ack.vim
" ---------------------------------------------------
Plugin 'hangeng/vim-kangaroo'

" Plugin 'guofh/VimStock'

" ---------------------------------------------------
" tpope/vim-markdown
" nelstrom/vim-markdown-folding
" ---------------------------------------------------
" more stable folding than  plasticboy/vim-markdown
Plugin 'tpope/vim-markdown'
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
Plugin 'nelstrom/vim-markdown-folding'

nnoremap <Space> za
""""""folding shortcuts""""""
" zi  switch folding on or off
" za  toggle current fold open/closed
" zc  close current fold
" zR  open all folds
" zM  close all folds
" zv  expand folds to reveal cursor
" zj  move down to top of next fold
" zk  move up to bottom of previous fold
" zo  open current fold
" zO  recursively open current fold
" zc  close current fold
" zC  recursively close current fold
" za  toggle current fold
" zA  recursively open/close current fold
" zm  reduce `foldlevel` by one
" zM  close all folds
" zr  increase `foldlevel` by one
" zR  open all folds

